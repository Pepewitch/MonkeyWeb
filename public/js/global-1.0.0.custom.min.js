/**
 * Created by TaO on 8/6/2560.
 */
function log(text){"use strict";console.log(text)}
function writeCookie(key,value){"use strict";document.cookie=key+"="+value;log("[writeCookie()] -> "+key+" wrote")}
function deleteCookie(key){"use strict";document.cookie=key+"=; expires=Thu, 01 Jan 1970 00:00:00 UTC";log("[deleteCookie()] -> "+key+" deleted")}
function checkLogin(){"use strict";let cookie=getCookieDict();let user=cookie.monkeyWebUser;let pwd=cookie.monkeyWebPassword;log("[checkLogin()] : cookie -> ");log(cookie);$.post("/post/password",{userID:user,password:pwd},function(data){if(data.err){log("[checkLogin()] : post/password => Error")}else{log("[checkLogin()] : post/password => ");log(data);if(!data.verified){log("[checkLogin()] : redirecting to login");self.location="/login"}}})}
function checkValidUser(position){"use strict";let cookie=getCookieDict();let user=cookie.monkeyWebUser;log("[checkValidUser()] : cookie -> ");log(cookie);$.post("/post/position",{userID:user},function(data){if(data.err){log("[checkValidUser()] : post/position => Error")}else{log("[checkValidUser()] : post/position => ");log(data);if(position.constructor===Array){log($.inArray(data.position,position)===-1);if($.inArray(data.position,position)===-1){log("[checkValidUser()] : redirecting to login");logout()}}else{if(data.position!==position){log("[checkValidUser()] : redirecting to login");logout()}}}})}
function getCookieDict(){"use strict";let allcookies=document.cookie;log(allcookies);let obj={};let cookiearray=allcookies.split('; ');for(let i=0;i<cookiearray.length;i++){obj[cookiearray[i].split('=')[0]]=cookiearray[i].split('=')[1]}
    return obj}
function logout(){"use strict";log("[Logout()] : redirection to login page");deleteCookie("monkeyWebUser");deleteCookie("monkeyWebPassword");self.location="/login"}
function setStudentNavName(){"use strict";let cookie=getCookieDict();let user=cookie.monkeyWebUser;$.post("post/name",{userID:user},function(data){if(data.err){document.getElementById("navStudentName").innerHTML=" ";log("[setStudentNavName()] => Set student name in navigation bar to :  ")}else{document.getElementById("studentNavNameSmall").innerHTML=data.firstname;document.getElementById("studentNavNameLarge").innerHTML=data.firstname;log("[setStudentNavName()] => Set student name in navigation bar to : "+data.firstname)}})}
function loadRegistrationPage(){"use strict";let cookie=getCookieDict();let user=cookie.monkeyWebUser;$.post("post/registrationState",{studentID:user},function(data){if(data.err){log("[loadRegistrationPage()] : post/status => Error");log(data.err)}else{log("[loadRegistrationPage()] : post/status =>");log(data);switch(data.registrationState){case "unregistered":log("[loadRegistrationPage()] : redirection to registrationName");self.location="/registrationName";break;case "untransferred":log("[loadRegistrationPage()] : redirection to registrationReceipt");self.location="/registrationReceipt";break;case "transferred":break;case "rejected":break;case "registered":break;default:break}}})}